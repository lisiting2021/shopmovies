<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.movie.mapper.orderMapper" >
  <resultMap id="BaseResultMap" type="com.zking.movie.model.order" >
    <constructor >
      <idArg column="order_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="user_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="movie_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="movie_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="movie_price" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, user_id, movie_id, user_name, movie_name, movie_price, time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from order
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zking.movie.model.order" >
    insert into order (order_id, user_id, movie_id, 
      user_name, movie_name, movie_price, 
      time)
    values (#{orderId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{movieId,jdbcType=BIGINT}, 
      #{userName,jdbcType=VARCHAR}, #{movieName,jdbcType=VARCHAR}, #{moviePrice,jdbcType=DOUBLE}, 
      #{time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zking.movie.model.order" >
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="movieId != null" >
        movie_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="movieName != null" >
        movie_name,
      </if>
      <if test="moviePrice != null" >
        movie_price,
      </if>
      <if test="time != null" >
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="movieId != null" >
        #{movieId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="movieName != null" >
        #{movieName,jdbcType=VARCHAR},
      </if>
      <if test="moviePrice != null" >
        #{moviePrice,jdbcType=DOUBLE},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.movie.model.order" >
    update order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="movieId != null" >
        movie_id = #{movieId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="movieName != null" >
        movie_name = #{movieName,jdbcType=VARCHAR},
      </if>
      <if test="moviePrice != null" >
        movie_price = #{moviePrice,jdbcType=DOUBLE},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.movie.model.order" >
    update order
    set user_id = #{userId,jdbcType=BIGINT},
      movie_id = #{movieId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      movie_name = #{movieName,jdbcType=VARCHAR},
      movie_price = #{moviePrice,jdbcType=DOUBLE},
      time = #{time,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>